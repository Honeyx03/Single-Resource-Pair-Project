{"ast":null,"code":"var _jsxFileName = \"/Users/angelina/Module_4/Single-Resource-Pair-Project-Frontend/front-end/src/Components/GameNew.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../CSS/GameNew\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = process.env.REACT_APP_API_URL;\nexport default function GameNew() {\n  _s();\n  let {\n    index\n  } = useParams();\n  const navigate = useNavigate();\n  const [game, setGame] = useState({\n    name: \"\",\n    players: \"\",\n    category: \"\",\n    cards_required: false,\n    instructions: \"\"\n  });\n  const addGame = newGame => {\n    axios.get(`${API}/games/${index}`).then(response => {\n      setGame(response.data);\n    }).catch(e => console.error(e));\n  };\n  //instead of useEffect we are have the addGame fxn that will let the user make a POST request that will send the form data to our server(backend). once the request is complete, the page will navigate to the index page that will show their new game was added.\n\n  const handleTextChange = e => {\n    setGame({\n      ...game,\n      [e.target.id]: e.target.value\n    });\n  };\n  const handleCheckboxChange = () => {\n    setGame({\n      ...game,\n      cards_required: !game.cards_required\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    addGame(game);\n    //Call the addGame function with the game data and not \"newGame\" because the form data is stored in the \"game\" state variable, not \"newGame.\" So, when we want to call the addGame function, we should pass the game data as an argument, not newGame.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"New\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        value: game.name,\n        type: \"text\",\n        onChange: handleTextChange,\n        placeholder: \"Name of game\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"players\",\n        children: \"Players:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"players\",\n        value: game.players,\n        type: \"text\",\n        onChange: handleTextChange,\n        placeholder: \"Number of players?\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"category\",\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"category\",\n        value: game.category,\n        type: \"text\",\n        onChange: handleTextChange,\n        placeholder: \"Game category\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cards\",\n        children: \"Cards Required?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"cards\",\n        value: game.cards_required,\n        type: \"checkbox\",\n        onChange: handleCheckboxChange,\n        checked: game.cards_required,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"instructions\",\n        children: \"Instructions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"instructions\",\n        value: game.instructions,\n        type: \"text\",\n        placeholder: \"Instructions\",\n        onChange: handleTextChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/games\",\n          children: \"Nevermind!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(GameNew, \"q6X4xJnOnJBriN/h5pV80U0dZOk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GameNew;\nvar _c;\n$RefreshReg$(_c, \"GameNew\");","map":{"version":3,"names":["useState","useEffect","useParams","Link","useNavigate","axios","jsxDEV","_jsxDEV","API","process","env","REACT_APP_API_URL","GameNew","_s","index","navigate","game","setGame","name","players","category","cards_required","instructions","addGame","newGame","get","then","response","data","catch","e","console","error","handleTextChange","target","id","value","handleCheckboxChange","handleSubmit","preventDefault","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","required","checked","to","_c","$RefreshReg$"],"sources":["/Users/angelina/Module_4/Single-Resource-Pair-Project-Frontend/front-end/src/Components/GameNew.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../CSS/GameNew\"\n\nconst API = process.env.REACT_APP_API_URL;\n\nexport default function GameNew() {\n    let { index } = useParams();\n    const navigate = useNavigate();\n    const [game, setGame] = useState({\n        name: \"\",\n        players: \"\",\n        category: \"\",\n        cards_required: false,\n        instructions: \"\",\n    });\n\n    const addGame = (newGame) => {\n        axios\n        .get(`${API}/games/${index}`)\n        .then((response) => {\n            setGame(response.data);\n        })\n        .catch((e) => console.error(e));\n    }\n    //instead of useEffect we are have the addGame fxn that will let the user make a POST request that will send the form data to our server(backend). once the request is complete, the page will navigate to the index page that will show their new game was added.\n\n    const handleTextChange = (e) =>{\n        setGame({ ...game, [e.target.id]: e.target.value });\n    };\n\n    const handleCheckboxChange = () => {\n        setGame({ ...game, cards_required: !game.cards_required });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        addGame(game);\n        //Call the addGame function with the game data and not \"newGame\" because the form data is stored in the \"game\" state variable, not \"newGame.\" So, when we want to call the addGame function, we should pass the game data as an argument, not newGame.\n    }\n\n    return (\n        <div className=\"New\">\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"name\">Name:</label>\n                <input\n                    id=\"name\"\n                    value={game.name}\n                    type=\"text\"\n                    onChange={handleTextChange}\n                    placeholder=\"Name of game\"\n                    required\n                />\n                <label htmlFor=\"players\">Players:</label>\n                <input\n                    id=\"players\"\n                    value={game.players}\n                    type=\"text\"\n                    onChange={handleTextChange}\n                    placeholder=\"Number of players?\"\n                    required\n                />\n                <label htmlFor=\"category\">Category:</label>\n                <input \n                    id=\"category\"\n                    value={game.category}\n                    type=\"text\"\n                    onChange={handleTextChange}\n                    placeholder=\"Game category\"\n                    required\n                />\n                <label htmlFor=\"cards\">Cards Required?</label>\n                <input \n                    id=\"cards\"\n                    value={game.cards_required}\n                    type=\"checkbox\"\n                    onChange={handleCheckboxChange}\n                    checked={game.cards_required}\n                    required\n                />\n                <label htmlFor=\"instructions\">Instructions:</label>\n                <textarea \n                    id=\"instructions\"\n                    value={game.instructions}\n                    type=\"text\"\n                    placeholder=\"Instructions\"\n                    onChange={handleTextChange}\n                    required\n                />\n                <br />\n\n                <input type=\"submit\" />\n                <button>\n                    <Link to=\"/games\">Nevermind!</Link>\n                </button>\n            </form>\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}